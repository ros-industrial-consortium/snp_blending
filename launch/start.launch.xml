<?xml version="1.0"?>
<launch>
  <arg name="sim_vision" default="True"/>
  <arg name="sim_robot" default="True"/>
  <arg name="bypass_execution" default="$(var sim_robot)" />
  <arg name="mesh_file" default="$(find-pkg-share snp_blending)/meshes/part_scan.ply"/>
  <arg name="scan_trajectory_file" default="$(find-pkg-share snp_blending)/config/scan_traj.yaml"/>
  <arg name="verbose" default="True"/>
  <arg name="scan_disabled_contact_links" default="[table, base_link, floor]"/>
  <arg name="scan_reduced_contact_links" default="[buffy_tcp]"/>
  <arg name="robot_description_file" default="$(find-pkg-share snp_blending)/urdf/workcell.xacro"/>
  <arg name="robot_description" default="$(command 'xacro $(var robot_description_file) ros_distro:=$(env ROS_DISTRO)')"/>
  <arg name="robot_description_semantic" default="$(command 'cat $(find-pkg-share snp_blending)/config/workcell.srdf')"/>
  <arg name="reference_frame" default="table"/>
  <!-- Set the default name of the follow joint trajectory action depending on whether the robot is simulated (i.e., ros2_control) or real hardware is being used -->
  <arg name="follow_joint_trajectory_action" default="joint_trajectory_position_controller/follow_joint_trajectory" if="$(var sim_robot)"/>
  <arg name="follow_joint_trajectory_action" default="joint_trajectory_action" unless="$(var sim_robot)"/>

  <!-- URDF, Rviz -->
  <include file="$(find-pkg-share snp_blending)/launch/test.launch.xml">
    <arg name="robot_description" value="$(var robot_description)"/>
    <arg name="robot_description_semantic" value="$(var robot_description_semantic)"/>
    <arg name="rviz" value="False"/>
    <arg name="use_gui" value="$(var bypass_execution)"/>
  </include>

  <!-- Trajectory Preview -->
  <include file="$(find-pkg-share trajectory_preview)/launch/robot_model_preview_pipeline.launch.xml">
    <arg name="robot_description" value="$(var robot_description)"/>
    <arg name="root_frame" value="floor"/>
  </include>

  <node pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share snp_blending)/config/app.rviz" output="screen">
    <param name="bt_files" value="[$(find-pkg-share snp_application)/config/snp.xml]"/>
    <param name="bt_plugin_libs" value="[$(find-pkg-prefix snp_application)/lib/libsnp_application_bt_plugins.so]"/>
    <param name="bt_ros_plugin_libs" value="[$(find-pkg-prefix snp_application)/lib/libsnp_application_bt_plugins.so]"/>
    <param name="tree" value="main"/>
    <!-- Application -->
    <param name="config_file" value="$(find-pkg-share snp_blending)/config/tpp.yaml"/>
    <param name="mesh_file" value="/tmp/results_mesh.ply"/>
    <param name="motion_group" value="manipulator"/>
    <param name="freespace_motion_group" value="manipulator"/>
    <param name="reference_frame" value="$(var reference_frame)"/>
    <param name="tcp_frame" value="buffy_tcp"/>
    <param name="camera_frame" value="camera_color_optical_frame"/>
    <param name="robot_description" value="$(var robot_description)"/>
    <param name="robot_description_semantic" value="$(var robot_description_semantic)"/>
    <param name="follow_joint_trajectory_action" value="$(var follow_joint_trajectory_action)"/>
    <!-- Home -->
    <param name="home_state_joint_values" value="[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"/>
    <param name="home_state_joint_names" value="['joint_1_s', 'joint_2_l', 'joint_3_u', 'joint_4_r', 'joint_5_b', 'joint_6_t']"/>
    <param name="freespace_tree" value="go_home_main"/>
    <!-- Industrial Reconstruction parameters -->
    <param name="ir.tsdf.min.x" value="0.0"/>
    <param name="ir.tsdf.min.y" value="0.0"/>
    <param name="ir.tsdf.min.z" value="0.02"/>
    <param name="ir.tsdf.max.x" value="0.9144"/>
    <param name="ir.tsdf.max.y" value="1.524"/>
    <param name="ir.tsdf.max.z" value="0.5"/>
    <param name="ir.tsdf.voxel_length" value="0.003"/>
    <param name="ir.tsdf.sdf_trunc" value="0.03"/>
    <param name="ir.rgbd.depth_scale" value="1000.0"/>
    <param name="ir.rgbd.depth_trunc" value="1.1"/>
    <param name="ir.live" value="true"/>
    <param name="ir.min_faces" value="3000"/>
    <param name="ir.normal_angle_tol" value="85.0"/>
    <param name="ir.normal_x" value="0.0"/>
    <param name="ir.normal_y" value="0.0"/>
    <param name="ir.normal_z" value="1.0"/>
    <param name="ir.archive_dir" value=""/>
  </node>

  <!-- Launch Open3d Interface Node -->
  <group unless="$(var sim_vision)">
    <node pkg="industrial_reconstruction" exec="industrial_reconstruction">
      <param name="depth_image_topic" value="/camera/aligned_depth_to_color/image_raw"/>
      <param name="color_image_topic" value="/camera/color/image_raw"/>
      <param name="camera_info_topic" value="/camera/color/camera_info"/>
      <param name="cache_count" value="1"/>
      <param name="slop" value="0.05"/>
    </node>
    <include file="$(find-pkg-share realsense2_camera)/launch/rs_launch.py">
      <arg name="align_depth.enable" value="true"/>
      <arg name="pointcloud.enable" value="true"/>
      <arg name="rgb_camera.profile" value="640x360x30"/>
    </include>
  </group>
  <!-- Launch Open3d Interface Node (Sim) -->
  <group if="$(var sim_vision)">
    <node pkg="snp_scanning" exec="reconstruction_sim_node">
      <param name="mesh_file" value="$(var mesh_file)"/>
      <param name="reference_frame" value="$(var reference_frame)"/>
      <remap from="mesh" to="industrial_reconstruction_mesh"/>
    </node>
  </group>

  <!-- Launch Motion Planning Node -->
  <include file="$(find-pkg-share snp_motion_planning)/launch/planning_server.launch.xml">
    <arg name="robot_description" value="$(var robot_description)"/>
    <arg name="robot_description_semantic" value="$(var robot_description_semantic)"/>
    <arg name="verbose" value="$(var verbose)"/>
    <arg name="scan_disabled_contact_links" value="$(var scan_disabled_contact_links)"/>
    <arg name="scan_reduced_contact_links" value="$(var scan_reduced_contact_links)"/>
  </include>

  <node pkg="snp_scanning" exec="scan_motion_plan_from_file_node">
    <param name="scan_trajectory_file" value="$(var scan_trajectory_file)"/>
  </node>

  <group unless="$(var sim_robot)">
    <!-- [[Motoman Driver Goes Here]] -->
  </group>
  <group if="$(var sim_robot)">
    <node pkg="snp_motion_execution" exec="robot_enable_simulator" />
    <group if="$(var bypass_execution)">
      <node pkg="snp_motion_execution" exec="execution_simulator" >
        <param name="follow_joint_trajectory_action" value="$(var follow_joint_trajectory_action)"/>
      </node>
    </group>
    <group unless="$(var bypass_execution)">
      <include file="$(find-pkg-share snp_motion_execution)/launch/ros2_control.launch.py">
        <arg name="robot_description_file" value="$(var robot_description_file)"/>
        <arg name="controllers_file" value="$(find-pkg-share snp_blending)/config/controllers.yaml"/>
      </include>
    </group>
  </group>
</launch>


